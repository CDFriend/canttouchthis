apply plugin: 'java'

sourceCompatibility='1.8'
targetCompatibility='1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.xerial:sqlite-jdbc:3.20.1'
    testCompile 'junit:junit:4.12'
}

// Production and test source sets
sourceSets {
    main {
        java {
            srcDir 'src/main'
        }
    }

    test {
        java {
            srcDir 'src/test'
        }
    }
}

task makeAuthDB(type:Exec) {
    commandLine 'python', 'generate_auth_db.py'
}

tasks.compileJava.dependsOn(makeAuthDB)

// Test options
test {
    testLogging {
        events "passed", "failed", "skipped"
        showStandardStreams = true
    }
}

// Remove dist folder during clean (NOTE: requires admin permissions!)
clean.doFirst {
    delete dist_folder
    println("Deleting " + dist_folder)
}

// Custom build tasks
task run_server(type:JavaExec) {
    main = 'canttouchthis.server.Main'
    classpath = sourceSets.main.runtimeClasspath
}

task run_client(type:JavaExec) {
    main = 'canttouchthis.client.Main'
    classpath = sourceSets.main.runtimeClasspath
}

// Generate JARs
task server_jar(type:Jar) {
    from (sourceSets.main.output) {
        include "**"
        archiveName "canttouchthis-server-1.0.jar"
    }

    manifest {
        attributes "Main-Class" : "canttouchthis.server.Main"
    }
}

task client_jar(type:Jar) {
    from (sourceSets.main.output) {
        include "**"
        archiveName "canttouchthis-client-1.0.jar"
    }

    manifest {
        attributes "Main-Class" : "canttouchthis.client.Main"
    }
}

task make_dist(type: Copy, dependsOn: [server_jar, client_jar]) {
    from ("./") {
        include "*.sqlite"
    }

    from "build/libs/"
    into dist_folder
}
